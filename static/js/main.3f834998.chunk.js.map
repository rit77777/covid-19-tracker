{"version":3,"sources":["components/InfoBox.jsx","utils/util.js","components/Map.jsx","components/Table.jsx","images/covid.png","App.js","index.js"],"names":["InfoBox","title","isRed","isGrey","active","cases","total","props","Card","onClick","className","CardContent","isloading","casesTypeColors","hex","mulitiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","fillOpacity","pathOptions","color","fillColor","radius","Math","sqrt","Popup","style","backgroundImage","flag","Map","countries","zoom","ChangeView","useMap","setView","MapContainer","scrollWheelZoom","TileLayer","attribution","url","Table","App","useState","setCountries","setCountry","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","setZoom","mapCountries","setMapCountries","setCasesType","isLoading","setLoading","useEffect","fetch","then","response","json","name","value","iso2","getCountriesData","onCountryChange","e","countryCode","target","console","log","src","logo","alt","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f834998.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent } from '@material-ui/core';\r\n\r\nimport './InfoBox.css';\r\n\r\nfunction InfoBox({ title, isRed, isGrey, active, cases, total, ...props }) {\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`info-box ${active && 'info-box-selected'} ${\r\n        isRed && 'info-box-red'\r\n      } ${isGrey && 'info-box-grey'}`}\r\n    >\r\n      <CardContent>\r\n        {/* Title */}\r\n        <h3 className='info-box-title'>{title}</h3>\r\n\r\n        {/* Number of Cases */}\r\n        <h2\r\n          className={`info-box-cases ${!isRed && 'info-box-cases-green'} ${\r\n            isGrey && 'info-box-cases-grey'\r\n          }`}\r\n        >\r\n          {props.isloading ? <i className='fa fa-cog fa-spin fa-fw' /> : cases}\r\n        </h2>\r\n\r\n        {/* Total Cases */}\r\n        <h4 className='info-box-total'>{total} Total</h4>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from 'react';\r\nimport numeral from 'numeral';\r\nimport { Circle, Popup } from 'react-leaflet';\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: '#CC1034',\r\n    mulitiplier: 800,\r\n  },\r\n\r\n  recovered: {\r\n    hex: '#7DD71D',\r\n    mulitiplier: 1200,\r\n  },\r\n\r\n  deaths: {\r\n    hex: '#C0C0C0',\r\n    mulitiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  sortedData.sort((a, b) => b.cases - a.cases);\r\n\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format('0.0a')}` : '+0';\r\n\r\n//Draw circles on the map\r\nexport const showDataOnMap = (data, casesType) =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      fillOpacity={0.4}\r\n      pathOptions={{\r\n        color: casesTypeColors[casesType].hex,\r\n        fillColor: casesTypeColors[casesType].hex,\r\n      }}\r\n      radius={\r\n        Math.sqrt(country[casesType] / 10) *\r\n        casesTypeColors[casesType].mulitiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className='info-container'>\r\n          <div\r\n            className='info-flag'\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          />\r\n          <div className='info-name'>{country.country}</div>\r\n          <div className='info-confirmed'>\r\n            Cases: {numeral(country.cases).format('0,0')}\r\n          </div>\r\n          <div className='info-recovered'>\r\n            Recovered: {numeral(country.recovered).format('0,0')}\r\n          </div>\r\n          <div className='info-deaths'>\r\n            Deaths: {numeral(country.deaths).format('0,0')}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from 'react';\r\nimport { MapContainer, TileLayer, useMap } from 'react-leaflet';\r\n\r\nimport { showDataOnMap } from '../utils/util';\r\nimport './Map.css';\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  function ChangeView({ center, zoom }) {\r\n    const map = useMap();\r\n    map.setView(center, zoom);\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <MapContainer\r\n      casesType={casesType}\r\n      className='map'\r\n      center={center}\r\n      zoom={zoom}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <ChangeView center={center} zoom={zoom} />\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n      />\r\n      {showDataOnMap(countries, casesType)}\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport './Table.css';\r\nimport numeral from 'numeral';\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div className='table'>\r\n      <tr>\r\n        <td>Countries</td>\r\n\r\n        <td>Total Cases</td>\r\n      </tr>\r\n      {countries.map(({ country, cases }) => (\r\n        <tr>\r\n          <td>{country}</td>\r\n\r\n          <td>{numeral(cases).format('000,000')}</td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","export default __webpack_public_path__ + \"static/media/covid.33b326c9.png\";","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  CardContent,\n  Card,\n} from '@material-ui/core';\n\nimport InfoBox from './components/InfoBox';\nimport Map from './components/Map';\nimport Table from './components/Table';\nimport { sortData, prettyPrintStat } from './utils/util';\nimport 'leaflet/dist/leaflet.css';\nimport logo from './images/covid.png';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('global');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([20.5937, 78.9629]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState('cases');\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries')\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    setLoading(true);\n    const countryCode = e.target.value;\n\n    setCountry(countryCode);\n\n    const url =\n      countryCode === 'global'\n        ? 'https://disease.sh/v3/covid-19/all'\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setLoading(false);\n        // console.log([data.countryInfo.lat, data.countryInfo.long]);\n        countryCode === 'global'\n          ? setMapCenter([20.5937, 78.9629])\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setZoom(4);\n      });\n\n    console.log(countryInfo);\n  };\n\n  return (\n    <main>\n      <div className='stats'>\n        <div className='header'>\n          <div className='header-name'>\n            <img className='logo' src={logo} alt='logo'></img>\n            <h1>Covid-19 tracker</h1>\n          </div>\n          <FormControl className='dropdown'>\n            <Select\n              variant='outlined'\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value='global'>Global</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className='stats-card'>\n          <InfoBox\n            isRed\n            active={casesType === 'cases'}\n            onClick={(e) => setCasesType('cases')}\n            title='Total Cases'\n            total={prettyPrintStat(countryInfo.cases)}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            isloading={isLoading}\n          />\n          <InfoBox\n            active={casesType === 'recovered'}\n            onClick={(e) => setCasesType('recovered')}\n            title='Recovered'\n            total={prettyPrintStat(countryInfo.recovered)}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            isloading={isLoading}\n          />\n          <InfoBox\n            isGrey\n            active={casesType === 'deaths'}\n            onClick={(e) => setCasesType('deaths')}\n            title='Deaths'\n            total={prettyPrintStat(countryInfo.deaths)}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            isloading={isLoading}\n          />\n        </div>\n        <Card>\n          <CardContent>\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n          </CardContent>\n        </Card>\n      </div>\n\n      <Map\n        countries={mapCountries}\n        center={mapCenter}\n        zoom={zoom}\n        casesType={casesType}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}